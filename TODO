Overall:
  1) How to handle db constraint errors? i.e. invalid packets
   o log as alert? and write invalid packet?
   o modify constraint(s) to allow invalid packets
   o modify mpdu to log as error/warning?
GUI:
 10) get log panel/tail log panels to scroll automatically
     o yview('moveto') does not work
 17) Help Panel
     o use a two-paned window for an indexed help
     o write help documentation
 20) Treeview/TabularPanel
     o Horizontal scrollbars on tree view do not work
     o Column widths are off a little (wider than desired)
 21) Have to work on resize of widgets etc with row/column configure
 22) use Tk validatecommand on widgets
 24) guisave/guiload only works on first sublevel i.e. children of the master panel
     should we extend to every panel or leave as is
 27) Splash panel
     o get rid of border around progressbar and progressbar.pbar
     o many statements are not even seen, remove them
 29) icons or status bar to show what state services are in??
 30) What is the best way to handle child panels and db connections?
     o psycopg2 claims excellent threaded cursors - do we use the main connection
       in WraithPanel and pass created cursors to children? -> have to trust the
       children to rollback on any errors
     o or do we create a new connection for each child that needs it?
 31) use postgresql listen/notify for updating data from tables
 34) look into Treeview virtual events Select,Open,Close to see if it is anything
     we can use
 35) implement query functionality, need a simplistic query language in xml or
     something
 36) add wildcards to some fields in query i.e. mac address allow search on vendor
     with 00:01:02.*
Iyri:
 26) how to identify gps device failure, removal?
 53) implement spoof, txpwr commands
 55) start gpsd if it does not start automatically (assuming gps device is
     plugged in)
 56) test c2c after switch to single platform
 61) document different comm protocols used internally
 63) format tracebacks to logging better
 64) threshers and the buffer
  o add/remove is too sporadic (FIXED)
  o do we sanity check the constants? postgre will allow only a certain # of
    connections
    show max_connections; -> on my system 100
    select count(*) from pg_stat_activity; -> number of current connections?
  o handle situations where MAX_THRESH is reached tested w/ one radio, the buffer
    eventually gets full and overwritten so, when two radios are used this problem
    will occur much more rapidly, the problem is the collator can only identify
    overwritten frames after the fact
    - should we create a secondary buffer in collator (for each radio)? we
      can copy the contents from the primary buffer to the secondary easily with
      secondary[idx:l] = primary[idx:l]. This way, the collator can drop packets
      if/when the secondary buffer reaches fullness
    - should we just increase the size of the buffers to say 10000 or some other
      large number. Using this approach, at what point does it become less efficient?
 65) look into using a priority queue for the internal comms (to Collator)
 67) should we have one Collator per radio or continue with one and only one
Wifi:
  1) Should we add support for AVS, Prism headers ?
  2) radiotap: ensure data pad is handled for atheros cards (any others?)
  3) in mpdu, fully parse
     o control wrapper
     o +htc
     o info-elements
      - RSN Std 8.4.2.27, #48
      - TIM Info-Element #5 from beacons could be useful
      - parse timing advance
  5) how to support a-msdu etc
  6) 802.1X parsing as well as additional mpdu i.e. 802.11u, 802.11s etc
  8) in iw and iwtools switch to netlink rather than parsing iw/iwconfig/ifconfig
     output
  9) handle multiple ssids in mgmt frames
 10) add ability to track multipe errors if frame can be processed further
Nidus(.sql):
  1) create different users (w/ varying roles/authorities)